[tox]
minversion = 1.8
envlist = py34-{test,pylint,flake8}

[project]
name = callerframe

[base]
command_clean = {envpython} scripts/clean py:{toxinidir}/{[project]name}:inf py:{toxinidir}/tests:inf py:{toxinidir}:0 data:build data:dist

[testenv]
install_command = pip install --upgrade -I {opts} {packages}

deps =
    test:	-r{toxinidir}/requirements/tests.txt
    pylint:	-r{toxinidir}/requirements/pylint.txt
    flake8:	-r{toxinidir}/requirements/flake8.txt
    coverage:	-r{toxinidir}/requirements/tests.txt

commands =
    test:	{[base]command_clean}
    test:	py.test --basetemp {envtmpdir} --doctest-modules tests
    test:	py.test --basetemp {envtmpdir} --doctest-modules {[project]name}
    test:	{[base]command_clean}

    pylint:	{envpython} scripts/redirect -o file:{envdir}/QA/pylint.log -o stdout: -- {envbindir}/pylint --rcfile {toxinidir}/pylint.ini {[project]name}
    pylint:	{[base]command_clean}

    flake8:	{envpython} scripts/redirect -o file:{envdir}/QA/flake8.log -o stdout: -- {envbindir}/flake8 --format pylint --config {toxinidir}/flake8.ini {[project]name} 
    flake8:	{[base]command_clean}

    coverage:	{[base]command_clean}
    coverage:	{[base]command_create_coveragerc}
    coverage:	{envpython} scripts/redirect -o file:{envdir}/tox.coveragerc -e stderr: -- sed {toxinidir}/.coveragerc -e 's%[ ]*directory[ ]*=.*%directory = '{envdir}'/QA/coverage%g'
    coverage:	coverage erase
    coverage:	py.test --cov {[project]name} --cov-report=html --cov-config={envdir}/tox.coveragerc tests
    coverage:	{[base]command_clean}

[testenv:docs]
basepython = python3.4
changedir = docs
deps = -r{toxinidir}/requirements/docs.txt
whitelist_externals =
    make
commands =
    make clean
    make doctest
    make html

[pytest]
minversion = 2.5
addopts = -rsf --maxfail=3 -q --doctest-modules --ignore build --ignore dist
doctest_optionflags = IGNORE_EXCEPTION_DETAIL
#doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL
#norecursedirs = .tox
